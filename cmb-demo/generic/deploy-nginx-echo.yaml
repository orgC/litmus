kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx-echo
  namespace: demo
  labels:
    name: nginx-echo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: nginx-echo
  template:
    metadata:
      name: nginx-echo
      labels:
        name: nginx-echo
    spec:
      containers:
        - name: nginx-echo
          image: 'quay01.gps.gsslab.pek2.redhat.com/library/nginx-echo:1.12-2'
          ports:
            - containerPort: 9000
              name: http
              protocol: TCP
          env:
            - name: TZ
              value: 'Asia/Shanghai'
          resources:
            limits:
              memory: 1Gi
              cpu: 2
            requests:
              memory: 128Mi
              cpu: 100m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /opt/nginx/conf/nginx.conf
              name: nginx-config
              subPath: nginx.conf
            - name: ephemeral
              mountPath: /tmp
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - configMap:
            defaultMode: 420
            name: nginx-conf-file
          name: nginx-config
        - name: ephemeral
          emptyDir: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx-echo
  name: nginx-echo
  namespace: demo
spec:
  ports:
    - port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    name: nginx-echo
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: v1
data:
  nginx.conf: |

    #user  nobody;
    worker_processes  2;

    error_log  /dev/stdout;
    #error_log  logs/error.log  notice;
    #logs in path /opt/nginx/logs
    error_log  logs/error.log  error;

    pid        logs/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       mime.types;
        default_type  application/octet-stream;

        log_format  main  '[access] $remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /dev/stdout  main;
        #access_log off;

        sendfile        on;
        #tcp_nopush     on;

        #keepalive_timeout  0;
        keepalive_timeout  65;

        #gzip  on;

        server {
            listen       9000;
            server_name  localhost;

            #charset koi8-r;

            #access_log  logs/host.access.log  main;

            location / {
                root   html;
                index  index.html index.htm;
            }

            location /sleep_10ms {
            echo_sleep 0.01;
            echo sleep10ms;
            }

            location /sleep_20ms {
            echo_sleep 0.02;
            echo sleep20ms;
            }

            location /sleep_30ms {
            echo_sleep 0.02;
            echo sleep30ms;
            }

            location /sleep_50ms {
            echo_sleep 0.05;
            echo sleep50ms;
            }

            location /sleep_80ms {
            echo_sleep 0.08;
            echo sleep80ms;
            }

            location /sleep_100ms {
            echo_sleep 0.10;
            echo sleep100ms;
            }

            #error_page  404              /404.html;

            # redirect server error pages to the static page /50x.html
            #
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   html;
            }

            # proxy the PHP scripts to Apache listening on 127.0.0.1:80
            #
            #location ~ \.php$ {
            #    proxy_pass   http://127.0.0.1;
            #}

            # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
            #
            #location ~ \.php$ {
            #    root           html;
            #    fastcgi_pass   127.0.0.1:9000;
            #    fastcgi_index  index.php;
            #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            #    include        fastcgi_params;
            #}

            # deny access to .htaccess files, if Apache's document root
            # concurs with nginx's one
            #
            #location ~ /\.ht {
            #    deny  all;
            #}
        }
    }
kind: ConfigMap
metadata:
  name: nginx-conf-file
  namespace: demo